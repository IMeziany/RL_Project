{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVMAAAAAAAAACMHnN0YWJsZV9iYXNlbGluZXMzLmRxbi5wb2xpY2llc5SMCURRTlBvbGljeZSTlC4=",
        "__module__": "stable_baselines3.dqn.policies",
        "__annotations__": "{'q_net': <class 'stable_baselines3.dqn.policies.QNetwork'>, 'q_net_target': <class 'stable_baselines3.dqn.policies.QNetwork'>}",
        "__doc__": "\n    Policy class with Q-Value Net and target net for DQN\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    ",
        "__init__": "<function DQNPolicy.__init__ at 0x00000236BDD172E0>",
        "_build": "<function DQNPolicy._build at 0x00000236BDD17380>",
        "make_q_net": "<function DQNPolicy.make_q_net at 0x00000236BDD17420>",
        "forward": "<function DQNPolicy.forward at 0x00000236BDD174C0>",
        "_predict": "<function DQNPolicy._predict at 0x00000236BDD17560>",
        "_get_constructor_parameters": "<function DQNPolicy._get_constructor_parameters at 0x00000236BDD17600>",
        "set_training_mode": "<function DQNPolicy.set_training_mode at 0x00000236BDD176A0>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x00000236BDD23140>"
    },
    "verbose": 1,
    "policy_kwargs": {},
    "num_timesteps": 10000,
    "_total_timesteps": 10000,
    "_num_timesteps_at_start": 0,
    "seed": null,
    "action_noise": null,
    "start_time": 1745486892645480600,
    "learning_rate": 0.001,
    "tensorboard_log": null,
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWV7wAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJZ4AAAAAAAAAAAAgD8AAAAA1wCAPgAAAAAAAIA/AAAAAJza5jwAAAAAZkamvQAAAAAAAIA/AAAAAHUMPz4AAAAADKKsvQAAAAAAAIA/AAAAAE+5rD4AAAAAyqK3vQAAAAAAAIA/AAAAAOtz9z4AAAAAAo/BvQAAAAAAAIA/AAAAAJSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLAUsFSwaHlIwBQ5R0lFKULg=="
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVdAAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYBAAAAAAAAAAGUjAVudW1weZSMBWR0eXBllJOUjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwGFlIwBQ5R0lFKULg=="
    },
    "_last_original_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWV7wAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJZ4AAAAAAAAAAAAgD8AAAAAMgGAPgAAAAAAAIA/AAAAAETODT0AAAAA+iakvQAAAAAAAIA/AAAAABnhRT4AAAAApdCpvQAAAAAAAIA/AAAAANhbsD4AAAAAtMS0vQAAAAAAAIA/AAAAAEdP+z4AAAAAT3XAvQAAAAAAAIA/AAAAAJSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLAUsFSwaHlIwBQ5R0lFKULg=="
    },
    "_episode_num": 411,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": 0.0,
    "_stats_window_size": 100,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "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"
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 9000,
    "observation_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWVtQIAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMBl9zaGFwZZRLBUsGhpSMA2xvd5SMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJZ4AAAAAAAAAAAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/5RoC0sFSwaGlIwBQ5R0lFKUjA1ib3VuZGVkX2JlbG93lGgTKJYeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJRoCIwCYjGUiYiHlFKUKEsDjAF8lE5OTkr/////Sv////9LAHSUYksFSwaGlGgWdJRSlIwEaGlnaJRoEyiWeAAAAAAAAAAAAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH+UaAtLBUsGhpRoFnSUUpSMDWJvdW5kZWRfYWJvdmWUaBMolh4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlGgdSwVLBoaUaBZ0lFKUjAhsb3dfcmVwcpSMBC1pbmaUjAloaWdoX3JlcHKUjANpbmaUjApfbnBfcmFuZG9tlE51Yi4=",
        "dtype": "float32",
        "_shape": [
            5,
            6
        ],
        "low": "[[-inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf]]",
        "bounded_below": "[[False False False False False False]\n [False False False False False False]\n [False False False False False False]\n [False False False False False False]\n [False False False False False False]]",
        "high": "[[inf inf inf inf inf inf]\n [inf inf inf inf inf inf]\n [inf inf inf inf inf inf]\n [inf inf inf inf inf inf]\n [inf inf inf inf inf inf]]",
        "bounded_above": "[[False False False False False False]\n [False False False False False False]\n [False False False False False False]\n [False False False False False False]\n [False False False False False False]]",
        "low_repr": "-inf",
        "high_repr": "inf",
        "_np_random": null
    },
    "action_space": {
        ":type:": "<class 'gymnasium.spaces.discrete.Discrete'>",
        ":serialized:": "gAWVogEAAAAAAACMGWd5bW5hc2l1bS5zcGFjZXMuZGlzY3JldGWUjAhEaXNjcmV0ZZSTlCmBlH2UKIwBbpSMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMBnNjYWxhcpSTlIwFbnVtcHmUjAVkdHlwZZSTlIwCaTiUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYkMIBQAAAAAAAACUhpRSlIwFc3RhcnSUaAhoDkMIAAAAAAAAAACUhpRSlIwGX3NoYXBllCmMBWR0eXBllGgOjApfbnBfcmFuZG9tlIwUbnVtcHkucmFuZG9tLl9waWNrbGWUjBBfX2dlbmVyYXRvcl9jdG9ylJOUjAVQQ0c2NJRoG4wUX19iaXRfZ2VuZXJhdG9yX2N0b3KUk5SGlFKUfZQojA1iaXRfZ2VuZXJhdG9ylIwFUENHNjSUjAVzdGF0ZZR9lChoJooQFZ40QKycdGP8PxG6mX2dSowDaW5jlIoR685/N/3dn+MCRXkkeWEF9QB1jApoYXNfdWludDMylEsBjAh1aW50ZWdlcpRKekp6aHVidWIu",
        "n": "5",
        "start": "0",
        "_shape": [],
        "dtype": "int64",
        "_np_random": "Generator(PCG64)"
    },
    "n_envs": 1,
    "buffer_size": 5000,
    "batch_size": 32,
    "learning_starts": 1000,
    "tau": 1.0,
    "gamma": 0.99,
    "gradient_steps": 1,
    "optimize_memory_usage": false,
    "replay_buffer_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVNQAAAAAAAACMIHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5idWZmZXJzlIwMUmVwbGF5QnVmZmVylJOULg==",
        "__module__": "stable_baselines3.common.buffers",
        "__annotations__": "{'observations': <class 'numpy.ndarray'>, 'next_observations': <class 'numpy.ndarray'>, 'actions': <class 'numpy.ndarray'>, 'rewards': <class 'numpy.ndarray'>, 'dones': <class 'numpy.ndarray'>, 'timeouts': <class 'numpy.ndarray'>}",
        "__doc__": "\n    Replay buffer used in off-policy algorithms like SAC/TD3.\n\n    :param buffer_size: Max number of element in the buffer\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param device: PyTorch device\n    :param n_envs: Number of parallel environments\n    :param optimize_memory_usage: Enable a memory efficient variant\n        of the replay buffer which reduces by almost a factor two the memory used,\n        at a cost of more complexity.\n        See https://github.com/DLR-RM/stable-baselines3/issues/37#issuecomment-637501195\n        and https://github.com/DLR-RM/stable-baselines3/pull/28#issuecomment-637559274\n        Cannot be used in combination with handle_timeout_termination.\n    :param handle_timeout_termination: Handle timeout termination (due to timelimit)\n        separately and treat the task as infinite horizon task.\n        https://github.com/DLR-RM/stable-baselines3/issues/284\n    ",
        "__init__": "<function ReplayBuffer.__init__ at 0x00000236BDA41260>",
        "add": "<function ReplayBuffer.add at 0x00000236BDA413A0>",
        "sample": "<function ReplayBuffer.sample at 0x00000236BDA41440>",
        "_get_samples": "<function ReplayBuffer._get_samples at 0x00000236BDA414E0>",
        "_maybe_cast_dtype": "<staticmethod(<function ReplayBuffer._maybe_cast_dtype at 0x00000236BDA41580>)>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x00000236BDA320C0>"
    },
    "replay_buffer_kwargs": {},
    "train_freq": {
        ":type:": "<class 'stable_baselines3.common.type_aliases.TrainFreq'>",
        ":serialized:": "gAWVYQAAAAAAAACMJXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi50eXBlX2FsaWFzZXOUjAlUcmFpbkZyZXGUk5RLAWgAjBJUcmFpbkZyZXF1ZW5jeVVuaXSUk5SMBHN0ZXCUhZRSlIaUgZQu"
    },
    "use_sde_at_warmup": false,
    "exploration_initial_eps": 1.0,
    "exploration_final_eps": 0.05,
    "exploration_fraction": 0.1,
    "target_update_interval": 50,
    "_n_calls": 10000,
    "max_grad_norm": 10,
    "exploration_rate": 0.05,
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWV3AMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLBUsTQyaVAZcAdAEAAAAAAAAAAAIAiQF8AKsBAAAAAAAAqwEAAAAAAABTAJROhZSMBWZsb2F0lIWUjBJwcm9ncmVzc19yZW1haW5pbmeUhZSMZ2M6XFVzZXJzXFBDXEFwcERhdGFcTG9jYWxcUHJvZ3JhbXNcUHl0aG9uXFB5dGhvbjMxMlxMaWJcc2l0ZS1wYWNrYWdlc1xzdGFibGVfYmFzZWxpbmVzM1xjb21tb25cdXRpbHMucHmUjAg8bGFtYmRhPpSMIWdldF9zY2hlZHVsZV9mbi48bG9jYWxzPi48bGFtYmRhPpRLYkMQ+IAApGWpTtA7TdMsTtQmT5RDAJSMDnZhbHVlX3NjaGVkdWxllIWUKXSUUpR9lCiMC19fcGFja2FnZV9flIwYc3RhYmxlX2Jhc2VsaW5lczMuY29tbW9ulIwIX19uYW1lX1+UjB5zdGFibGVfYmFzZWxpbmVzMy5jb21tb24udXRpbHOUjAhfX2ZpbGVfX5RoDnVOTmgAjBBfbWFrZV9lbXB0eV9jZWxslJOUKVKUhZR0lFKUaACMEl9mdW5jdGlvbl9zZXRzdGF0ZZSTlGgifZR9lChoGowIPGxhbWJkYT6UjAxfX3F1YWxuYW1lX1+UjCFnZXRfc2NoZWR1bGVfZm4uPGxvY2Fscz4uPGxhbWJkYT6UjA9fX2Fubm90YXRpb25zX1+UfZSMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROjApfX21vZHVsZV9flGgbjAdfX2RvY19flE6MC19fY2xvc3VyZV9flGgAjApfbWFrZV9jZWxslJOUaAIoaAcoSwFLAEsASwFLAUsTQwiVAZcAiQFTAJRoCSmMAV+UhZRoDowEZnVuY5SMGWNvbnN0YW50X2ZuLjxsb2NhbHM+LmZ1bmOUS4ZDCPiAANgPEogKlGgSjAN2YWyUhZQpdJRSlGgXTk5oHilSlIWUdJRSlGgkaEB9lH2UKGgajARmdW5jlGgojBljb25zdGFudF9mbi48bG9jYWxzPi5mdW5jlGgqfZRoLE5oLU5oLmgbaC9OaDBoMkc/UGJN0vGp/IWUUpSFlIwXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwhZRSlIWUaEldlGhLfZR1hpSGUjAu"
    },
    "batch_norm_stats": [],
    "batch_norm_stats_target": [],
    "exploration_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVgwMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLBEsTQzqVA5cAZAF8AHoKAACJAmtEAAByAokBUwCJA2QBfAB6CgAAiQGJA3oKAAB6BQAAiQJ6CwAAegAAAFMAlE5LAYaUKYwScHJvZ3Jlc3NfcmVtYWluaW5nlIWUjGdjOlxVc2Vyc1xQQ1xBcHBEYXRhXExvY2FsXFByb2dyYW1zXFB5dGhvblxQeXRob24zMTJcTGliXHNpdGUtcGFja2FnZXNcc3RhYmxlX2Jhc2VsaW5lczNcY29tbW9uXHV0aWxzLnB5lIwEZnVuY5SMG2dldF9saW5lYXJfZm4uPGxvY2Fscz4uZnVuY5RLdEM1+IAA2AwN0BAi0QwioGzSCzLYExaISuATGJhB0CAy0RwysHO4VbF70RtDwGzRG1LRE1LQDFKUQwCUjANlbmSUjAxlbmRfZnJhY3Rpb26UjAVzdGFydJSHlCl0lFKUfZQojAtfX3BhY2thZ2VfX5SMGHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbpSMCF9fbmFtZV9flIwec3RhYmxlX2Jhc2VsaW5lczMuY29tbW9uLnV0aWxzlIwIX19maWxlX1+UaAx1Tk5oAIwQX21ha2VfZW1wdHlfY2VsbJSTlClSlGgeKVKUaB4pUpSHlHSUUpRoAIwSX2Z1bmN0aW9uX3NldHN0YXRllJOUaCR9lH2UKGgajARmdW5jlIwMX19xdWFsbmFtZV9flIwbZ2V0X2xpbmVhcl9mbi48bG9jYWxzPi5mdW5jlIwPX19hbm5vdGF0aW9uc19flH2UKGgKjAhidWlsdGluc5SMBWZsb2F0lJOUjAZyZXR1cm6UaDB1jA5fX2t3ZGVmYXVsdHNfX5ROjAxfX2RlZmF1bHRzX1+UTowKX19tb2R1bGVfX5RoG4wHX19kb2NfX5ROjAtfX2Nsb3N1cmVfX5RoAIwKX21ha2VfY2VsbJSTlEc/qZmZmZmZmoWUUpRoOEc/uZmZmZmZmoWUUpRoOEc/8AAAAAAAAIWUUpSHlIwXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwLg=="
    }
}